{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Italic;
\f3\fnil\fcharset0 Menlo-BoldItalic;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue128;\red102\green14\blue122;\red0\green128\blue0;
\red0\green0\blue255;\red128\green128\blue128;\red128\green128\blue0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 package 
\f1\b0 \cf0 com.example.bendev.cocktailcurator;\uc0\u8232 \u8232 \u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 android.content.Context;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 android.database.SQLException;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 android.database.sqlite.SQLiteAbortException;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 android.database.sqlite.SQLiteDatabase;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 android.database.sqlite.SQLiteOpenHelper;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 android.util.Log;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 android.widget.Toast;\uc0\u8232 \u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 java.io.FileOutputStream;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 java.io.IOException;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 java.io.InputStream;\uc0\u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 java.io.OutputStream;\uc0\u8232 \u8232 
\f0\b \cf2 public class 
\f1\b0 \cf0 Database 
\f0\b \cf2 extends  
\f1\b0 \cf0 SQLiteOpenHelper \{\uc0\u8232 \u8232     
\f0\b \cf2 private 
\f1\b0 \cf0 String 
\f0\b \cf3 DB_NAME
\f1\b0 \cf0 =
\f0\b \cf4 "cocktail.db"
\f1\b0 \cf0 ;\uc0\u8232     
\f0\b \cf2 private static 
\f1\b0 \cf0 String 
\f2\i \cf3 DB_PATH
\f1\i0 \cf0 = 
\f0\b \cf4 "/data/data/com.bendev.cocktailcurator/databases/"
\f1\b0 \cf0 ;\uc0\u8232     
\f0\b \cf2 private static final int 
\f3\i \cf3 DB_VER
\f1\i0\b0 \cf0 =\cf5 1\cf0 ;\uc0\u8232 \u8232     
\f0\b \cf2 private 
\f1\b0 \cf0 SQLiteDatabase 
\f0\b \cf3 dataBase
\f1\b0 \cf0 ;\uc0\u8232     
\f0\b \cf2 private final 
\f1\b0 \cf0 Context 
\f0\b \cf3 dbContext
\f1\b0 \cf0 ;\uc0\u8232 \u8232 \u8232     
\f0\b \cf2 public 
\f1\b0 \cf0 Database(Context context, SQLiteDatabase dataBase)\{\uc0\u8232         
\f0\b \cf2 super
\f1\b0 \cf0 (context,DBActivity.
\f2\i \cf3 DatabaseName
\f1\i0 \cf0 ,
\f0\b \cf2 null
\f1\b0 \cf0 ,
\f3\i\b \cf3 DB_VER
\f1\i0\b0 \cf0 );\uc0\u8232 \u8232         
\f2\i \cf6 //this.dataBase = dataBase;\uc0\u8232         
\f0\i0\b \cf2 this
\f1\b0 \cf0 .
\f0\b \cf3 dbContext
\f1\b0 \cf0 =context;\uc0\u8232         
\f0\b \cf3 DB_NAME
\f1\b0 \cf0 =DBActivity.
\f2\i \cf3 DatabaseName
\f1\i0 \cf0 ;\uc0\u8232 \u8232         
\f0\b \cf2 if 
\f1\b0 \cf0 (checkDatabase()) \{\uc0\u8232             openDatabase();\u8232         \} 
\f0\b \cf2 else\uc0\u8232         
\f1\b0 \cf0 \{\uc0\u8232             
\f0\b \cf2 try 
\f1\b0 \cf0 \{\uc0\u8232                 
\f0\b \cf2 this
\f1\b0 \cf0 .getReadableDatabase();\uc0\u8232                 copyDatabase();\u8232                 
\f0\b \cf2 this
\f1\b0 \cf0 .close();\uc0\u8232                 openDatabase();\u8232 \u8232             \} 
\f0\b \cf2 catch 
\f1\b0 \cf0 (IOException e) \{\uc0\u8232                 
\f0\b \cf2 throw new 
\f1\b0 \cf0 Error(
\f0\b \cf4 "Error copying database"
\f1\b0 \cf0 );\uc0\u8232             \}\u8232             Toast.
\f2\i makeText
\f1\i0 (context, 
\f0\b \cf4 "Initial database is created"
\f1\b0 \cf0 , Toast.
\f3\i\b \cf3 LENGTH_LONG
\f1\i0\b0 \cf0 ).show();\uc0\u8232         \}\u8232     \}\u8232 \u8232 \u8232     
\f0\b \cf2 public void 
\f1\b0 \cf0 copyDatabase() 
\f0\b \cf2 throws 
\f1\b0 \cf0 IOException\{\uc0\u8232         InputStream in= 
\f0\b \cf3 dbContext
\f1\b0 \cf0 .getAssets().open(
\f0\b \cf3 DB_NAME
\f1\b0 \cf0 );\uc0\u8232         String outFile = 
\f2\i \cf3 DB_PATH
\f1\i0 \cf0 +
\f0\b \cf3 DB_NAME
\f1\b0 \cf0 ;\uc0\u8232         OutputStream out =
\f0\b \cf2 new 
\f1\b0 \cf0 FileOutputStream(outFile);\uc0\u8232 \u8232         
\f0\b \cf2 byte
\f1\b0 \cf0 [] buffer = 
\f0\b \cf2 new byte
\f1\b0 \cf0 [\cf5 1024\cf0 ];\uc0\u8232         
\f0\b \cf2 int 
\f1\b0 \cf0 length;\uc0\u8232         
\f0\b \cf2 while 
\f1\b0 \cf0 ((length=in.read(buffer))>\cf5 0\cf0 )\{\uc0\u8232             out.write(buffer,\cf5 0\cf0 ,length);\uc0\u8232 \u8232         \}\u8232         
\f2\i \cf6 //closes stream\uc0\u8232         
\f1\i0 \cf0 out.flush();\uc0\u8232         out.close();\u8232         in.close();\u8232 \u8232     \}\u8232 \u8232 \u8232 \u8232     
\f0\b \cf2 private void 
\f1\b0 \cf0 openDatabase() 
\f0\b \cf2 throws 
\f1\b0 \cf0 SQLException\{\uc0\u8232         String path = 
\f2\i \cf3 DB_PATH
\f1\i0 \cf0 +
\f0\b \cf3 DB_NAME
\f1\b0 \cf0 ;\uc0\u8232         System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(
\f0\b \cf4 "!!!!!!!DATABASE!!!!!"
\f1\b0 \cf0 );\uc0\u8232         
\f0\b \cf3 dataBase 
\f1\b0 \cf0 = SQLiteDatabase.
\f2\i openDatabase
\f1\i0 (path, 
\f0\b \cf2 null
\f1\b0 \cf0 , SQLiteDatabase.
\f3\i\b \cf3 OPEN_READWRITE
\f1\i0\b0 \cf0 );\uc0\u8232 \u8232     \}\u8232     
\f0\b \cf2 private boolean 
\f1\b0 \cf0 checkDatabase()\{\uc0\u8232         SQLiteDatabase checker =
\f0\b \cf2 null
\f1\b0 \cf0 ;\uc0\u8232         
\f0\b \cf2 boolean 
\f1\b0 \cf0 exist=
\f0\b \cf2 false
\f1\b0 \cf0 ;\uc0\u8232 \u8232         
\f0\b \cf2 try
\f1\b0 \cf0 \{\uc0\u8232             String path=
\f2\i \cf3 DB_PATH
\f1\i0 \cf0 +
\f0\b \cf3 DB_NAME
\f1\b0 \cf0 ;\uc0\u8232             
\f2\i \cf6 //might need to change to read&write?\uc0\u8232             
\f1\i0 \cf0 checker=SQLiteDatabase.
\f2\i openDatabase
\f1\i0 (path,
\f0\b \cf2 null
\f1\b0 \cf0 ,SQLiteDatabase.
\f3\i\b \cf3 OPEN_READONLY
\f1\i0\b0 \cf0 );\uc0\u8232         \}\u8232         
\f0\b \cf2 catch
\f1\b0 \cf0 (SQLiteAbortException e)\{\uc0\u8232             Log.
\f2\i v
\f1\i0 (
\f0\b \cf4 "database log"
\f1\b0 \cf0 ,
\f0\b \cf4 "database isnt here"
\f1\b0 \cf0 );\uc0\u8232         \}\u8232 \u8232         
\f0\b \cf2 if
\f1\b0 \cf0 (checker!=
\f0\b \cf2 null
\f1\b0 \cf0 )\{\uc0\u8232             exist=
\f0\b \cf2 true
\f1\b0 \cf0 ;\uc0\u8232             checker.close();\u8232         \}\u8232         
\f0\b \cf2 return 
\f1\b0 \cf0 exist;\uc0\u8232 \u8232     \}\u8232 \u8232 \u8232     \cf7 @Override\uc0\u8232     
\f0\b \cf2 public void 
\f1\b0 \cf0 onCreate(SQLiteDatabase sqLiteDatabase) \{\uc0\u8232 \u8232     \}\u8232 \u8232     \cf7 @Override\uc0\u8232     
\f0\b \cf2 public void 
\f1\b0 \cf0 onUpgrade(SQLiteDatabase sqLiteDatabase, 
\f0\b \cf2 int 
\f1\b0 \cf0 i, 
\f0\b \cf2 int 
\f1\b0 \cf0 i1) \{\uc0\u8232 \u8232     \}\u8232 \}\u8232 \
}